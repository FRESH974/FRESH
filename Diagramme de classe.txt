@startuml

class Alert {
  -message: String
  -alerted_date: DateTime
  +Alert(message: String, alerted_date: DateTime)
  +getMessage(): String
  +setMessage(message: String): void
  +getAlertedDate(): DateTime
  +setAlertedDate(alerted_date: DateTime): void
}

class EmailToken {
  -send_date: DateTime
  -expire_date: DateTime
  -token: String
  +EmailToken(send_date: DateTime, expire_date: DateTime, token: String)
  +getSendDate(): DateTime
  +setSendDate(send_date: DateTime): void
  +getExpireDate(): DateTime
  +setExpireDate(expire_date: DateTime): void
  +getToken(): String
  +setToken(token: String): void
}

class Food {
  -name: String
  -quantity: int
  -adding_date: DateTime
  -expire_date: DateTime
  +Food(name: String, quantity: int, adding_date: DateTime, expire_date: DateTime)
  +getName(): String
  +setName(name: String): void
  +getQuantity(): int
  +setQuantity(quantity: int): void
  +getAddingDate(): DateTime
  +setAddingDate(adding_date: DateTime): void
  +getExpireDate(): DateTime
  +setExpireDate(expire_date: DateTime): void
}

class FoodRecipeInRefrigerator {
  -quantity: int
  -unit: String
  +FoodRecipeInRefrigerator(quantity: int, unit: String)
  +getQuantity(): int
  +setQuantity(quantity: int): void
  +getUnit(): String
  +setUnit(unit: String): void
}

class FoodRecipeNotInRefrigerator {
  -name: String
  -quantity: int
  -unit: String
  -can_be_regroup: bool
  +FoodRecipeNotInRefrigerator(name: String, quantity: int, unit: String, can_be_regroup: bool)
  +getName(): String
  +setName(name: String): void
  +getQuantity(): int
  +setQuantity(quantity: int): void
  +getUnit(): String
  +setUnit(unit: String): void
  +canBeRegroup(): bool
  +setCanBeRegroup(can_be_regroup: bool): void
}

class FreshUser {
  -email: String
  -roles: JSON
  -password: String
  -is_verified: bool
  -firstname: String
  -name: String
  -register_date: DateTime
  -last_connection: DateTime
  +FreshUser(email: String, roles: JSON, password: String, is_verified: bool, firstname: String, name: String, register_date: DateTime, last_connection: DateTime)
  +getEmail(): String
  +setEmail(email: String): void
  +getRoles(): JSON
  +setRoles(roles: JSON): void
  +getPassword(): String
  +setPassword(password: String): void
  +isVerified(): bool
  +setVerified(is_verified: bool): void
  +getFirstname(): String
  +setFirstname(firstname: String): void
  +getName(): String
  +setName(name: String): void
  +getRegisterDate(): DateTime
  +setRegisterDate(register_date: DateTime): void
  +getLastConnection(): DateTime
  +setLastConnection(last_connection: DateTime): void
}

class Recipe {
  -owner_id: int
  -name: String
  -create_date: DateTime
  -last_cooking_date: DateTime
  +Recipe(owner_id: int, name: String, create_date: DateTime, last_cooking_date: DateTime)
  +getOwnerId(): int
  +setOwnerId(owner_id: int): void
  +getName(): String
  +setName(name: String): void
  +getCreateDate(): DateTime
  +setCreateDate(create_date: DateTime): void
  +getLastCookingDate(): DateTime
  +setLastCookingDate(last_cooking_date: DateTime): void
}

class Refrigerator {
  -owner_id: int
  -name: String
  -adding_date: DateTime
  +Refrigerator(owner_id: int, name: String, adding_date: DateTime)
  +getOwnerId(): int
  +setOwnerId(owner_id: int): void
  +getName(): String
  +setName(name: String): void
  +getAddingDate(): DateTime
  +setAddingDate(adding_date: DateTime): void
}

Alert --> Food: food_id
Alert --> Refrigerator: refrigerator_id
Alert --> FreshUser: recipient_id
EmailToken --> FreshUser: fresh_user_id
Food --> Refrigerator: refrigerator_id
FoodRecipeInRefrigerator --> Food: food_id
FoodRecipeInRefrigerator --> Recipe: recipe_id
FoodRecipeInRefrigerator --> Refrigerator: refrigerator_id
FoodRecipeNotInRefrigerator --> Recipe: recipe_id
Recipe --> FreshUser: owner_id
Refrigerator --> FreshUser: owner_id

@enduml
